openapi: 3.0.2
info:
  title: AOS - Messenger - REST api
  description: '[UPM] AOS - Messenger - REST api operations'
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.0.1
  contact:
    name: AOS - Arquitecturas Orientadas a Servicios - UPM
    url: http://miw.etsisi.upm.es/
    email: miw.etsisi@upm.es
servers:
  - url: 'http://localhost:8000/api/v1/'
    description: 'AOS Production server'
paths:
  /NotificationMessages:
    post:
      tags: [ NotificationMessages ]
      summary: Creates a new message
      description: 'Create a new notification message and send it to the queue'
      operationId: api_messenger_producer
      requestBody:
        description: '`NotificationMessage` properties to add to the queue'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationMessage'
      responses:
        '201':
          description: '`Created`: message queued'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMessage'
        '422':
          description: '`Unprocessable entity`: textMessage or users is left out'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              example:
                code: 422
                message: 'Unprocessable entity: textMessage or users is left out'
    get:
      tags: [ NotificationMessages ]
      summary: Consume one message
      description: 'Consume one message.'
      operationId: api_messenger_consumer
      servers:
        - url: 'http://localhost:8080/api/v1/'
      responses:
        '200':
          description: 'Console ouput'
          content:
            application/txt:
              schema:
                type: string
              example: '<console output>'
    options:
      tags:
        - NotificationMessages
      summary: Provides the list of HTTP supported methods
      description: 'Return a `Allow` header with a comma separated list of HTTP supported methods.'
      operationId: api_messenger_options
      responses:
        '200':
          description: '`Allow` header &lt;Response body is empty&gt;'
          headers:
            Allow:
              description: 'List of HTTP supported methods'
              schema:
                type: string
components:
  schemas:
    NotificationMessage:
      required:
        - textMessage
        - users
      properties:
        textMessage:
          type: string
        users:
          description: 'Recipients emails'
          type: array
          items:
            type: string
            format: email
          minItems: 1
      type: object
      example:
        textMessage: 'Message text'
        users: [ 'foo@example.com', 'bar@example.com' ]
    Message:
      required:
        - code
        - message
      properties:
        code:
          description: 'Response code'
          type: integer
          format: int64
        message:
          description: 'Response message'
          type: string
      type: object
tags:
  - name: NotificationMessages
    description: 'Notification Message management'

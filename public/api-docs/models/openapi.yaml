openapi: 3.0.3

info:
  title: AOS - Messenger - REST api
  description: |
    ## ðŸ“¬ Ejemplo de servicio asÃ­ncrono basado en mensajes _(con el gestor RabbitMQ)_
    Ejemplo de implementaciÃ³n de dos servicios asÃ­ncronos que se comunican a travÃ©s de un gestor de colas de mensajes.
    El gestor de mensajes (_message broker_) empleado es [**RabbitMQ**](https://www.rabbitmq.com/), que proporciona un sistema de negociaciÃ³n
    de mensajes de cÃ³digo abierto. Por su parte, los servicios utilizan el protocolo [*AMQP*](https://www.amqp.org/) para conectarse con 
    el gestor de mensajes.
    ![img](/img/imagen1.png)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.2.1
  contact:
    name: AOS - Arquitecturas Orientadas a Servicios - UPM
    url: http://miw.etsisi.upm.es/
    email: miw.etsisi@upm.es

servers:
  - url: 'http://localhost:8000/api/v1/'
    description: 'AOS Production server'

tags:
  - name: 'ðŸ“§ NotificationMessages'
    description: 'Notification Message management'

paths:
  /NotificationMessages:
    post:
      tags: [ 'ðŸ“§ NotificationMessages' ]
      summary: Creates a new message
      description: 'Creates a new notification message and send it to the queue'
      operationId: api_messenger_producer
      requestBody:
        description: '`NotificationMessage` properties to add to the queue'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationMessage'
      responses:
        '201':
          description: '`CREATED`: message queued'
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationMessage'
        '422':
          description: '`UNPROCESSABLE ENTITY`: _textMessage_ or _users_ is left out'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              example:
                code: 422
                message: 'Unprocessable entity: textMessage or users is left out'

    get:
      tags: [ 'ðŸ“§ NotificationMessages' ]
      summary: Consume one message
      description: 'Consume one message.'
      operationId: api_messenger_consumer
      servers:
        - url: 'http://localhost:8080/api/v1/'
      responses:
        '200':
          description: 'Console ouput'
          content:
            application/txt:
              schema:
                type: string
              example: '<console output>'

    options:
      tags:
        - 'ðŸ“§ NotificationMessages'
      summary: Provides the list of HTTP supported methods
      description: 'Return a `Allow` header with a comma separated list of HTTP supported methods.'
      operationId: api_messenger_options
      responses:
        '204':
          description: '`Allow` header &lt;Response body is empty&gt;'
          headers:
            Allow:
              description: 'List of HTTP supported methods'
              schema:
                type: string

components:
  schemas:
    NotificationMessage:
      title: 'ðŸ“§ NotificationMessage'
      type: object
      required:
        - textMessage
        - users
      properties:
        textMessage:
          type: string
        users:
          description: 'Recipients emails'
          type: array
          items:
            type: string
            format: email
          minItems: 1
      example:
        textMessage: 'Message text'
        users: [ 'foo@example.com', 'bar@example.com' ]
    Message:
      title: HTTP Message
      type: object
      properties:
        code:
          description: 'Response code'
          type: integer
          format: int64
        message:
          description: 'Response message'
          type: string
  headers:
    Location:
      description: '`URL` location of the newly created message'
      schema:
        type: string
        format: url
        example:
          /api/v1/NotificationMessages
